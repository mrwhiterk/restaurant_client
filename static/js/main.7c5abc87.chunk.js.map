{"version":3,"sources":["Components/LoginForm/LoginForm.js","Components/SignupForm/SignupForm.js","Components/Navigation/Navbar/Navbar.js","Components/Menu/MiniCart/CartItem/CartItem.js","Components/Menu/MiniCart/MiniCart.js","Components/UI/Modal/Modal.js","api/Axios.js","api/setAuthJWT.js","api/api.js","Components/UI/Modal/DeleteCartItemModal/DeleteCartItemModal.js","Components/Menu/MiniCart/SummaryCart/SummaryCartItem/SummaryCartItem.js","Components/Menu/MiniCart/SummaryCart/SummaryCart.js","Components/UI/Modal/CheckoutModal/CheckoutModal.js","Components/Menu/Menu.js","Components/Orders/Orders.js","Components/Dashboard/Dashboard.js","helperMethods.js","App.js","index.js"],"names":["loginForm","props","className","onSubmit","handleSubmit","htmlFor","type","id","aria-describedby","placeholder","name","value","email","onChange","handleChange","required","password","signupForm","passwordConfirm","navbar","authenticateTabs","to","authenticatedOperations","isAuth","href","isAdmin","LogoutTab","onClick","logout","data-toggle","data-target","aria-controls","aria-expanded","aria-label","cartItem","handleSelectMenuItem","price","quantity","totalPrice","toFixed","e","renderCartModal","miniCart","cartItems","currentOrder","map","item","CartItem","key","length","MenuModal","state","currentItemEditMode","setQuantity","setState","target","options","i","push","this","itemPrice","Modal","show","onHide","handleClose","Header","closeButton","Title","Body","itemName","defaultValue","Footer","Button","variant","Component","console","log","process","Axios","axios","create","baseURL","setAuthToken","token","defaults","headers","common","apiAuth","localStorage","getItem","decoded","jwt_decode","currentTime","Date","now","exp","removeItem","setAuthJWT","_id","getLoggedInUser","a","async","get","axiosConfig","result","data","logoutUser","isAuthenticated","errMessage","showErr","toLogin","post","submitOrder","order","getUserOrders","getAllOrders","removeUserCurrentOrder","delete","getMenu","cancelOrder","put","setOrders","resumeOrder","completeOrder","markOrderIncomplete","deleteCartItemModal","title","cartItemName","deleteCartItem","summaryCartItem","summaryCart","SummaryCartItem","CheckoutModal","reduce","acc","val","SummaryCart","Menu","menu","currentMenuItem","currentDeleteItem","showDeleteModal","showCheckoutModal","handleShow","handleDeleteModalClose","handleCheckoutModalClose","handleCheckoutSubmit","history","isEditing","idx","findIndex","currentOrderItem","editObj","existingItemIdx","prevState","newCurrentOrder","currentItemObj","saveOrderInProgress","componentDidMount","orderCheckout","menuDisplay","Fragment","DeleteCartItemModal","Spinner","animation","role","MiniCart","Order","orders","content","Tab","Container","defaultActiveKey","Row","Col","sm","ListGroup","Item","action","completed","submitted","createdAt","toDateString","toLocaleTimeString","Content","Pane","eventKey","bind","el","userId","Dropdown","Toggle","setFlash","App","handleSignupSubmit","preventDefault","call","user","setAuthTokenLocalStorage","message","includes","setItem","admin","handleLoginSubmit","deleteUser","then","catch","error","response","errorFlash","router","path","render","exact","component","Orders","Dashboard","from","ReactDOM","document","getElementById"],"mappings":"wSAoDeA,G,MA/CG,SAACC,GAEf,OACE,0BAAMC,UAAU,YAAYC,SAAUF,EAAMG,cAC1C,qCACA,yBAAKF,UAAU,cACb,2BAAOG,QAAQ,sBAAf,iBACA,2BACEC,KAAK,QACLJ,UAAU,eACVK,GAAG,qBACHC,mBAAiB,YACjBC,YAAY,cACZC,KAAK,QACLC,MAAOV,EAAMW,MACbC,SAAUZ,EAAMa,aAChBC,UAAQ,KAGZ,yBAAKb,UAAU,cACb,2BAAOG,QAAQ,yBAAf,YACA,2BACEC,KAAK,WACLJ,UAAU,eACVK,GAAG,wBACHE,YAAY,WACZC,KAAK,WACLC,MAAOV,EAAMe,SACbH,SAAUZ,EAAMa,aAChBC,UAAQ,KAGZ,4BAAQT,KAAK,SAASJ,UAAU,mBAAhC,aCoBOe,G,MAtDI,SAAAhB,GACjB,OACE,0BACEC,UAAU,aACVC,SAAUF,EAAMG,cAEhB,sCACA,yBAAKF,UAAU,cACb,2BAAOG,QAAQ,sBAAf,iBACA,2BACEC,KAAK,QACLJ,UAAU,eACVK,GAAG,qBACHC,mBAAiB,YACjBC,YAAY,cACZC,KAAK,QACLC,MAAOV,EAAMW,MACbC,SAAUZ,EAAMa,aAChBC,UAAQ,KAGZ,yBAAKb,UAAU,cACb,2BAAOG,QAAQ,yBAAf,YACA,2BACEC,KAAK,WACLJ,UAAU,eACVK,GAAG,wBACHE,YAAY,WACZC,KAAK,WACLC,MAAOV,EAAMe,SACbH,SAAUZ,EAAMa,aAChBC,UAAQ,KAGZ,yBAAKb,UAAU,cACb,2BAAOG,QAAQ,yBAAf,oBACA,2BACEC,KAAK,WACLJ,UAAU,eACVK,GAAG,wBACHE,YAAY,WACZC,KAAK,kBACLC,MAAOV,EAAMiB,gBACbL,SAAUZ,EAAMa,aAChBC,UAAQ,KAGZ,4BAAQT,KAAK,SAASJ,UAAU,mBAAhC,a,gBCmCSiB,EAhFA,SAAAlB,GACb,IAAImB,EACF,oCACE,wBAAIlB,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWmB,GAAG,KAA9B,UAIF,wBAAInB,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWmB,GAAG,WAA9B,YAOFC,EAA0B,KAC1BrB,EAAMsB,SACRD,EACE,oCAME,wBAAIpB,UAAU,YACZ,uBAAGA,UAAU,WAAWsB,KAAK,KAA7B,UAIF,wBAAItB,UAAU,YACZ,uBAAGA,UAAU,WAAWsB,KAAK,WAA7B,YAIDvB,EAAMwB,SACL,wBAAIvB,UAAU,YACZ,uBAAGA,UAAU,WAAWsB,KAAK,cAA7B,gBASV,IAAIE,EACF,wBAAIxB,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWmB,GAAG,IAAIM,QAAS1B,EAAM2B,QAC/C,kBAAC,IAAD,QAKN,OACE,yBAAK1B,UAAU,iDACb,uBAAGA,UAAU,eAAesB,KAAK,MAAjC,gBAGA,4BACEtB,UAAU,iBACVI,KAAK,SACLuB,cAAY,WACZC,cAAY,aACZC,gBAAc,YACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAM/B,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BK,GAAG,aAC3C,wBAAIL,UAAU,4BACXoB,EACArB,EAAMsB,OAASG,EAAYN,M,gCCtDvBc,EApBE,SAAAjC,GAAK,OACpB,wBAAIC,UAAU,qEACXD,EAAMS,KACP,0BACER,UAAU,iCACVyB,QAAS,kBAAM1B,EAAMkC,qBAAqBlC,EAAMS,KAAMT,EAAMmC,OAAO,KAElEnC,EAAMoC,UAET,kCAAQpC,EAAMqC,WAAWC,QAAQ,IACjC,kBAAC,IAAD,CAAWZ,QAAS,SAAAa,GAAC,OAAIvC,EAAMwC,gBAAgBD,EAAGvC,EAAMS,WCuB7CgC,EAjCE,SAAAzC,GACf,IAAI0C,EAAY1C,EAAM2C,aAAaC,KAAI,SAAAC,GAAI,OACzC,kBAACC,EAAD,CACEC,IAAKF,EAAKpC,KACVA,KAAMoC,EAAKpC,KACX0B,MAAOU,EAAKV,MACZC,SAAUS,EAAKT,SACfC,WAAYQ,EAAKR,WACjBG,gBAAiBxC,EAAMwC,gBACvBN,qBAAsBlC,EAAMkC,0BAIhC,OACE,yBAAKjC,UAAU,YAGb,wBAAIA,UAAU,cACXyC,EAAUM,OACTN,EAEE,yBAAKzC,UAAU,eACb,wBAAIA,UAAU,mBAAd,sB,iBC0FCgD,E,2MA/GbC,MAAQ,CACNd,SAAU,EAAKpC,MAAMmD,qBAChB,EAAKnD,MAAMmD,oBAAoBf,SAChC,G,EAGNgB,YAAc,SAAAb,GACZ,EAAKc,SAAS,CAAEjB,UAAWG,EAAEe,OAAO5C,S,wEAOpC,IAJQ,IAAD,OACH6C,EAAU,GAGLC,EAAI,EAAGA,GAAK,GAAIA,IACvBD,EAAQE,KACN,4BAAQ/C,OAAQ8C,EAAGT,IAAKS,GACrBA,IAKP,IAAInB,EAAaqB,KAAK1D,MAAM2D,UAAYD,KAAKR,MAAMd,SAEnD,OACE,kBAACwB,EAAA,EAAD,CACEC,KAAMH,KAAK1D,MAAM6D,KACjBC,OAAQ,WACN,EAAK9D,MAAM+D,cACX,EAAKV,SAAS,CAAEjB,SAAU,MAG5B,kBAACwB,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACvB,kBAACL,EAAA,EAAMM,MAAP,qBAEF,kBAACN,EAAA,EAAMO,KAAP,KACE,yBAAKlE,UAAU,OACb,yBAAKA,UAAU,UAAf,mDAGA,yBAAKA,UAAU,uEACb,6BAAMyD,KAAK1D,MAAMoE,UACjB,kCAAQV,KAAK1D,MAAM2D,UAAUrB,QAAQ,KAEvC,yBAAKrC,UAAU,SACb,yBAAKA,UAAU,eACb,4BACEA,UAAU,gBACVK,GAAG,qBACHM,SAAU8C,KAAKN,YACfiB,aACEX,KAAK1D,MAAMmD,qBACNO,KAAK1D,MAAMmD,oBAAoBf,SAChC,GAKLmB,OAMX,kBAACK,EAAA,EAAMU,OAAP,KACE,yBAAKrE,UAAU,+DACb,yCAAeoC,EAAWC,QAAQ,IAClC,6BACE,kBAACiC,EAAA,EAAD,CACEC,QAAQ,YACR9C,QAAS,WACP,EAAK1B,MAAM+D,cACX,EAAKV,SAAS,CAAEjB,SAAU,MAJ9B,SAUCsB,KAAKR,MAAMd,SAAW,GACrB,kBAACmC,EAAA,EAAD,CACEC,QAAQ,UACR9C,QAAS,WACP,EAAK1B,MAAMG,aACT,EAAK+C,MAAMd,SACXC,EACA,EAAKrC,MAAMmD,qBAGb,EAAKE,SAAS,CAAEjB,SAAU,MAG3BsB,KAAK1D,MAAMmD,oBACR,cACA,uB,GA9FEsB,a,0BCFxBC,QAAQC,IAAIC,cACL,IAAMC,EAAQC,IAAMC,OAAO,CAChCC,QAEM,0B,iBCIOC,EARM,SAAAC,GACfA,EACFL,EAAMM,SAASC,QAAQC,OAAvB,cAAiDH,SAE1CL,EAAMM,SAASC,QAAQC,OAAvB,eCFEC,EAAU,WACrB,IAAMJ,EAAQK,aAAaC,QAAQ,YAEnC,IAAKN,EACH,OAAO,EAET,IAAMO,EAAUC,IAAWR,GAErBS,EAAcC,KAAKC,MAAQ,IAEjC,OAAIJ,EAAQK,IAAMH,GAChBJ,aAAaQ,WAAW,YAExBC,EAAW,OAEJ,IAEPA,EAAWd,GAEE,CACX5E,GAAImF,EAAQQ,OAOLC,EAAkB,0BAAAC,EAAAC,OAAA,uDAC7Bd,IAD6B,oBAAAa,EAAA,MAGRtB,EAAMwB,IAAI,gBAAiBC,IAHnB,cAGvBC,EAHuB,yBAIpBA,EAAOC,MAJa,gCAO3B9B,QAAQC,IAAI,QAAZ,MAP2B,yDAYlB8B,EAAa,oBAAAN,EAAAC,OAAA,gDACxBd,IAEA,IACEC,aAAaQ,WAAW,YACxBrC,KAAKL,SACH,CACEqD,iBAAiB,EACjBlF,SAAS,EACTmF,WAAY,GACZC,SAAS,EACTC,SAAS,IAEX,oBAAAV,EAAAC,OAAA,kEAAAD,EAAA,MACQtB,EAAMiC,KAAK,oBAAqBR,IADxC,wCAIF,MAAO/D,GACPmC,QAAQC,IAAI,SAAUpC,GAlBA,gDAsBbwE,EAAc,SAAMC,GAAN,eAAAb,EAAAC,OAAA,uDACzBd,IADyB,oBAAAa,EAAA,MAIJtB,EAAMiC,KAAK,cAAeE,EAAOV,IAJ7B,OAInBC,EAJmB,OAKvB7B,QAAQC,IAAI4B,GALW,gDAOvB7B,QAAQC,IAAI,QAAZ,MAPuB,yDAWdsC,EAAgB,0BAAAd,EAAAC,OAAA,uDAC3Bd,IAD2B,oBAAAa,EAAA,MAINtB,EAAMwB,IAAI,cAAeC,IAJnB,cAIrBC,EAJqB,yBAQlBA,GARkB,gCAUzB7B,QAAQC,IAAI,QAAZ,MAVyB,yDAchBuC,EAAe,0BAAAf,EAAAC,OAAA,uDAC1Bd,IAD0B,oBAAAa,EAAA,MAILtB,EAAMwB,IAAI,kBAAmBC,IAJxB,cAIpBC,EAJoB,yBAQjBA,GARiB,gCAUxB7B,QAAQC,IAAI,QAAZ,MAVwB,yDAcfwC,EAAyB,0BAAAhB,EAAAC,OAAA,uDACpCd,IADoC,oBAAAa,EAAA,MAIftB,EAAMuC,OAAO,kCAJE,OAI9Bb,EAJ8B,OAKlC7B,QAAQC,IAAI4B,GALsB,gDAOlC7B,QAAQC,IAAI,QAAZ,MAPkC,yDAWzB0C,EAAU,0BAAAlB,EAAAC,OAAA,uDACrBd,IADqB,oBAAAa,EAAA,MAIAtB,EAAMwB,IACvBzB,sDACA0B,IANiB,cAIfC,EAJe,OASnB7B,QAAQC,IAAI4B,GATO,kBAWZA,EAAOC,MAXK,gCAanB9B,QAAQC,IAAI,QAAZ,MAbmB,yDAiBV2C,EAAc,SAAehH,GAAf,SAAA6F,EAAAC,OAAA,uDACzBd,IADyB,oBAAAa,EAAA,MAIjBtB,EAAM0C,IAAN,6BAAgCjH,KAJf,OAMvBoD,KAAK8D,YANkB,gDAQvB9C,QAAQC,IAAI,QAAZ,MARuB,yDAYd8C,EAAc,SAAgBnH,GAAhB,SAAA6F,EAAAC,OAAA,uDACzBd,IADyB,oBAAAa,EAAA,MAIjBtB,EAAM0C,IAAN,6BAAgCjH,KAJf,OAMvBoD,KAAK8D,YANkB,gDAQvB9C,QAAQC,IAAI,QAAZ,MARuB,yDAYd+C,EAAgB,SAAgBpH,GAAhB,SAAA6F,EAAAC,OAAA,uDAC3Bd,IAD2B,oBAAAa,EAAA,MAInBtB,EAAM0C,IAAN,+BAAkCjH,KAJf,OAMzBoD,KAAK8D,YANoB,gDAQzB9C,QAAQC,IAAI,QAAZ,MARyB,yDAWhBgD,EAAsB,SAAgBrH,GAAhB,SAAA6F,EAAAC,OAAA,uDACjCd,IADiC,oBAAAa,EAAA,MAIzBtB,EAAM0C,IAAN,iCAAoCjH,KAJX,OAM/BoD,KAAK8D,YAN0B,gDAQ/B9C,QAAQC,IAAI,QAAZ,MAR+B,yDAWtB2B,EAAc,CACzBlB,QAAS,CACP,eAAgB,iCAChB,8BAA+B,MC9JpBwC,EApBa,SAAC5H,GAC3B,OACE,kBAAC4D,EAAA,EAAD,CAAOC,KAAM7D,EAAM6D,KAAMC,OAAQ9D,EAAM+D,aACrC,kBAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACvB,kBAACL,EAAA,EAAMM,MAAP,KAAclE,EAAM6H,QAEtB,kBAACjE,EAAA,EAAMO,KAAP,KACE,gEACmCnE,EAAM8H,aADzC,MAIF,kBAAClE,EAAA,EAAMU,OAAP,KACE,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAY9C,QAAS1B,EAAM+D,aAA3C,SAEA,kBAACQ,EAAA,EAAD,CAAQC,QAAQ,SAAS9C,QAAS,SAACa,GAAD,OAAOvC,EAAM+H,eAAexF,EAAGvC,EAAM8H,gBAAvE,wB,QCOOE,EApBS,SAAAhI,GAAK,OAC3B,wBAAIC,UAAU,8EACXD,EAAMS,KACP,0BACER,UAAU,IAGTD,EAAMoC,UAET,kCAAQpC,EAAMqC,WAAWC,QAAQ,MCYtB2F,EAtBK,SAAAjI,GAClB,IAAI0C,EAAY1C,EAAM2C,aAAaC,KAAI,SAAAC,GAAI,OACzC,kBAACqF,EAAD,CACEnF,IAAKF,EAAKpC,KACVA,KAAMoC,EAAKpC,KACX0B,MAAOU,EAAKV,MACZC,SAAUS,EAAKT,SACfC,WAAYQ,EAAKR,WACjBG,gBAAiBxC,EAAMwC,gBACvBN,qBAAsBlC,EAAMkC,0BAIhC,OACE,yBAAKjC,UAAU,YACb,wBAAIA,UAAU,uBACXyC,KCgCMyF,G,iLA9CH,IAAD,EAEsBzE,KAAK1D,MAAM2C,aAAayF,QAAO,SAACC,EAAKC,GAGhE,OAFAD,EAAI,IAAMC,EAAIlG,SACdiG,EAAI,IAAMC,EAAIjG,WACPgG,IACN,CAAC,EAAG,IANA,mBAEFjG,EAFE,KAEQC,EAFR,KAQP,OACE,6BACE,kBAACuB,EAAA,EAAD,CAAOC,KAAMH,KAAK1D,MAAM6D,KAAMC,OAAQJ,KAAK1D,MAAM+D,aAC/C,kBAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACvB,kBAACL,EAAA,EAAMM,MAAP,kCAEF,kBAACN,EAAA,EAAMO,KAAP,0CAEE,kBAACoE,EAAD,CACE5F,aAAce,KAAK1D,MAAM2C,aACzBH,gBAAiBkB,KAAK1D,MAAMwC,gBAC5BN,qBAAsBwB,KAAK1D,MAAMkC,uBAEnC,yBAAKjC,UAAU,wEACb,yBAAKA,UAAU,6CACb,uCACA,wCAEF,yBAAKA,UAAU,4DACb,6BAAMmC,GACN,iCAAOC,EAAWC,QAAQ,OAIhC,kBAACsB,EAAA,EAAMU,OAAP,CAAcrE,UAAU,IACtB,kBAACsE,EAAA,EAAD,CAAQC,QAAQ,YAAY9C,QAASgC,KAAK1D,MAAM+D,aAAhD,SAGA,kBAACQ,EAAA,EAAD,CAAQC,QAAQ,UAAU9C,QAASgC,KAAK1D,MAAMG,cAA9C,sB,GArCgBsE,aCqTb+D,G,2MArSbtF,MAAQ,CACNP,aAAc,GACdkB,MAAM,EACN4E,KAAM,KACNC,gBAAiB,KACjBC,kBAAmB,KACnBC,iBAAiB,EACjBzF,oBAAqB,KACrB0F,mBAAmB,G,EAGrBC,WAAa,WACX,EAAKzF,SAAS,CAAEQ,MAAM,K,EAGxBE,YAAc,WACZ,EAAKV,SAAS,CAAEQ,MAAM,EAAOV,oBAAqB,Q,EAGpD4F,uBAAyB,WACvB,EAAK1F,SAAS,CAAEuF,iBAAiB,EAAOD,kBAAmB,Q,EAG7DK,yBAA2B,WACzB,EAAK3F,SAAS,CAAEwF,mBAAmB,K,EAGrCI,qBAAuB,oBAAA9C,EAAAC,OAAA,uDACrB,EAAK/C,SAAS,CAAEwF,mBAAmB,IADd,oBAAA1C,EAAA,MAIAY,EAAY,EAAK7D,MAAMP,eAJvB,gCAAAwD,EAAA,MAKbgB,KALa,uDAOnBzC,QAAQC,IAAR,MAPmB,QAUrB,EAAK3E,MAAMkJ,QAAQzF,KAAK,WAVH,yD,EAavBvB,qBAAuB,SAACzB,EAAM0B,EAAOgH,GACnC,GAAIA,EAAW,CACb,IAAIC,EAAM,EAAKlG,MAAMP,aAAa0G,WAAU,SAAAxG,GAAI,OAAIA,EAAKpC,OAASA,KAC9D6I,EAAmB,YAAI,EAAKpG,MAAMP,cAAcyG,GAEpD1E,QAAQC,IAAI2E,GAEZ,EAAKjG,SACH,CACEqF,gBAAiB,CACfjI,OACA0B,SAEFgB,oBAAqBmG,IAEvB,WACE,EAAKR,qBAIT,EAAKzF,SACH,CACEqF,gBAAiB,CACfjI,OACA0B,SAEFgB,oBAAqB,OAEvB,WACE,EAAK2F,iB,EAMb3I,aAAe,SAACiC,EAAUC,EAAYkH,GACpC,EAAKxF,cAEL,IAAIyC,EAAI,eACH,EAAKtD,MAAMwF,gBADR,CAENtG,WACAC,eAGEmH,EAAkB,EAAKtG,MAAMP,aAAa0G,WAAU,SAAAxG,GACtD,OAAOA,EAAKpC,OAAS+F,EAAK/F,QAGxB+I,GAAmB,EACrB,EAAKnG,UACH,SAAAoG,GACE,IAAIC,EAAe,YAAO,EAAKxG,MAAMP,cACjCgH,EAAc,eAAQ,EAAKzG,MAAMP,aAAa6G,IAYlD,OAVID,GACFI,EAAevH,UAAYoE,EAAKpE,SAChCuH,EAAetH,YAAcmE,EAAKnE,aAElCsH,EAAevH,WAAaoE,EAAKpE,SACjCuH,EAAetH,aAAemE,EAAKnE,YAGrCqH,EAAgBF,GAAmBG,EAE5B,CACLhH,aAAc+G,EACdhB,gBAAiB,SAGrB,WACE,EAAKkB,sBACL,EAAKvG,SAAS,CAAEF,oBAAqB,UAIzC,EAAKE,UACH,SAAAoG,GAAS,MAAK,CACZ9G,aAAa,GAAD,mBAAM8G,EAAU9G,cAAhB,CAA8B6D,QAE5C,WACE,EAAKoD,0B,EAMbA,oBAAsB,oBAAAzD,EAAAC,OAAA,mDACTd,IAEDhF,GAHU,4EAAA6F,EAAA,MAMCtB,EAAMiC,KACvB,uBACA,EAAK5D,MAAMP,aACX2D,IATgB,8DAYlB5B,QAAQC,IAAR,MAZkB,yD,EAgBtBkF,kBAAoB,4BAAA1D,EAAAC,OAAA,mDACPd,IAEDhF,GAHQ,4EAAA6F,EAAA,MAMGtB,EAAMwB,IAAI,sBAAuBC,IANpC,cAMZC,EANY,kBAAAJ,EAAA,MAOCkB,KAPD,OAOZoB,EAPY,OAShB,EAAKpF,SAAS,CAAEV,aAAc4D,EAAOC,KAAMiC,SAT3B,kDAWhB/D,QAAQC,IAAR,MAXgB,0D,EAepBoD,eAAiB,SAAOxF,EAAG9B,GAAV,eAAA0F,EAAAC,OAAA,mDACJd,IACDhF,GAFK,4EAAA6F,EAAA,MAKMtB,EAAMuC,OAAN,+BACO3G,GACxB6F,IAPW,OAKTC,EALS,OAUb,EAAKlD,SAAS,CACZV,aAAc4D,EAAOC,KAAK7D,aAC1BiG,iBAAiB,EACjBD,kBAAmB,OAbR,kDAgBbjE,QAAQC,IAAR,MAhBa,0D,EAoBjBnC,gBAAkB,SAAOD,EAAG9B,GAAV,SAAA0F,EAAAC,OAAA,gDAChB,EAAK/C,SAAS,CAAEsF,kBAAmBlI,IAAQ,WACzC,EAAK4C,SAAS,CAAEuF,iBAAiB,OAFnB,sC,EAMlBkB,cAAgB,WACd,EAAKzG,SAAS,CAAEwF,mBAAmB,K,wEAG3B,IAAD,OAEHkB,EAAc,GA2BlB,OAzBIrG,KAAKR,MAAMuF,OACbsB,EAJe,CAAC,OAAQ,QAAS,UAIRnH,KAAI,SAACC,EAAMuG,GAElC,OACE,kBAAC,IAAMY,SAAP,CAAgBjH,IAAKqG,GACnB,4BAAKvG,GACL,6BACC,EAAKK,MAAMuF,KAAK5F,GAAMD,KAAI,SAAAC,GACzB,OACE,wBACE5C,UAAU,oCACV8C,IAAKF,EAAKpC,KACViB,QAAS,kBAAM,EAAKQ,qBAAqBW,EAAKpC,KAAMoC,EAAKV,SAExDU,EAAKpC,KACN,mCAASoC,EAAKV,MAAMG,QAAQ,aAWxC,yBAAKrC,UAAU,QAEZyD,KAAKR,MAAMwF,kBAAoBhF,KAAKR,MAAMC,oBACzC,kBAAC,EAAD,CACEY,YAAaL,KAAKK,YAClB5D,aAAcuD,KAAKvD,aACnB0D,KAAMH,KAAKR,MAAMW,KACjBO,SAAUV,KAAKR,MAAMwF,gBAAgBjI,KACrCkD,UAAWD,KAAKR,MAAMwF,gBAAgBvG,QAEtC,KAEHuB,KAAKR,MAAMwF,iBAAmBhF,KAAKR,MAAMC,oBACxC,kBAAC,EAAD,CACEY,YAAaL,KAAKK,YAClB5D,aAAcuD,KAAKvD,aACnB0D,KAAMH,KAAKR,MAAMW,KACjBO,SAAUV,KAAKR,MAAMwF,gBAAgBjI,KACrCkD,UAAWD,KAAKR,MAAMwF,gBAAgBvG,MACtCgB,oBAAqBO,KAAKR,MAAMC,sBAEhC,KAEHO,KAAKR,MAAM2F,mBACV,kBAAC,GAAD,CACEhF,KAAMH,KAAKR,MAAM2F,kBACjB9E,YAAaL,KAAKsF,yBAClB7I,aAAcuD,KAAKuF,qBACnBtG,aAAce,KAAKR,MAAMP,aACzBH,gBAAiBkB,KAAKlB,gBACtBN,qBAAsBwB,KAAKxB,uBAI9BwB,KAAKR,MAAM0F,gBACV,kBAACqB,EAAD,CACEpG,KAAMH,KAAKR,MAAM0F,gBACjBf,MAAM,mBACNC,aAAcpE,KAAKR,MAAMyF,kBACzBZ,eAAgBrE,KAAKqE,eACrBhE,YAAaL,KAAKqF,yBAElB,KAEJ,yBAAK9I,UAAU,OACZyD,KAAKR,MAAMuF,KACV,yBAAKxI,UAAU,SAAS8J,GAExB,yBAAK9J,UAAU,iBACb,kBAACiK,EAAA,EAAD,CAASC,UAAU,OAAOC,KAAK,SAAS5F,QAAQ,UAC9C,0BAAMvE,UAAU,WAAhB,gBAKN,yBAAKA,UAAU,gEACb,6BACE,yCACA,kBAACoK,EAAD,CACE1H,aAAce,KAAKR,MAAMP,aACzBH,gBAAiBkB,KAAKlB,gBACtBN,qBAAsBwB,KAAKxB,wBAG9BwB,KAAKR,MAAMP,aAAaK,OACvB,kBAACuB,EAAA,EAAD,CAAQC,QAAQ,kBAAkB9C,QAASgC,KAAKoG,eAAhD,eAGE,Y,GA9RGrF,a,wCCoGJ6F,I,kNA/GbpH,MAAQ,CACNqH,OAAQ,I,mFAIR7G,KAAK8D,c,6IAKgBP,K,OAAfV,E,OACJ7C,KAAKL,SAAS,CAAEkH,OAAQhE,EAAOC,O,gDAE/B9B,QAAQC,IAAR,M,yFAIM,IAAD,OACH6F,EACF,kBAACC,GAAA,EAAIC,UAAL,CAAepK,GAAG,0BAA0BqK,iBAAiB,UAC3D,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,GACP,kBAACC,GAAA,EAAD,KACGrH,KAAKR,MAAMqH,OAAO3H,KAAI,SAACC,EAAMW,GAAP,OACrB,kBAACuH,GAAA,EAAUC,KAAX,CAAgBjI,IAAKS,EAAGyH,QAAM,EAAC1J,KAAI,eAAUiC,IAC3C,8BAAOX,EAAKqI,UACR,OACArI,EAAKsI,UACL,UACA,aACJ,6BAAM,IAAIvF,KAAK/C,EAAKuI,WAAWC,gBAC/B,6BAAM,IAAIzF,KAAK/C,EAAKuI,WAAWE,4BAKvC,kBAACT,GAAA,EAAD,CAAKC,GAAI,GACP,kBAACL,GAAA,EAAIc,QAAL,KACG7H,KAAKR,MAAMqH,OAAO3H,KAAI,SAACC,EAAMW,GAC5B,OACE,kBAACiH,GAAA,EAAIe,KAAL,CACEC,SAAQ,eAAUjI,GAClBT,IAAKS,EACLvD,UAAU,sBAEV,6BACG4C,EAAKqI,UACJ,yBAAKjL,UAAU,sBAAsBmK,KAAK,SAA1C,QAGEvH,EAAKsI,UACP,yBAAKlL,UAAU,sBAAsBmK,KAAK,SAA1C,WAIA,yBAAKnK,UAAU,qBAAqBmK,KAAK,SAAzC,aAIF,6BACE,kBAAC7B,EAAD,CAAa5F,aAAcE,EAAK2H,UAChC,yBAAKvK,UAAU,+FACZ4C,EAAKsI,UACJ,kBAAC5G,EAAA,EAAD,CACEC,QAAQ,SACR9C,QAAS4F,EAAYoE,KAAK,EAAM7I,EAAKoD,MAFvC,gBAME,8BAEJ,yBAAKhG,UAAU,UACb,yBAAKA,UAAU,6CACb,uCACA,wCAEF,yBAAKA,UAAU,4DACb,6BACG4C,EAAK2H,QAAQpC,QACZ,SAACC,EAAKsD,GAAN,OAAatD,EAAMsD,EAAGvJ,WACtB,IAGJ,iCAEGS,EAAK2H,QACHpC,QAAO,SAACC,EAAKsD,GAAN,OAAatD,EAAMsD,EAAGtJ,aAAY,GACzCC,QAAQ,iBAoBvC,OAJKoB,KAAKR,MAAMqH,OAAOvH,SACrBwH,EAAU,wBAAIvK,UAAU,eAAd,wBAGL,yBAAKA,UAAU,UAAUuK,O,GA5GhB/F,c,mBCiKL6F,G,2MAvJbpH,MAAQ,CACNqH,OAAQ,I,mFAIR7G,KAAK8D,c,6IAKgBN,K,OAAfX,E,OACJ7C,KAAKL,SAAS,CAAEkH,OAAQhE,EAAOC,O,gDAE/B9B,QAAQC,IAAR,M,yFAIM,IAAD,OACH6F,EACF,kBAACC,GAAA,EAAIC,UAAL,CAAepK,GAAG,0BAA0BqK,iBAAiB,UAC3D,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,GACP,kBAACC,GAAA,EAAD,KACGrH,KAAKR,MAAMqH,OAAO3H,KAAI,SAACC,EAAMW,GAAP,OACrB,kBAACuH,GAAA,EAAUC,KAAX,CAAgBjI,IAAKS,EAAGyH,QAAM,EAAC1J,KAAI,eAAUiC,IAC3C,6BAAMX,EAAK+I,OAAOjL,OAElB,8BACGkC,EAAKqI,UACF,SACArI,EAAKsI,UACL,UACA,aAEN,6BAAM,IAAIvF,KAAK/C,EAAKuI,WAAWC,gBAC/B,6BAAM,IAAIzF,KAAK/C,EAAKuI,WAAWE,4BAKvC,kBAACT,GAAA,EAAD,CAAKC,GAAI,GACP,kBAACL,GAAA,EAAIc,QAAL,KACG7H,KAAKR,MAAMqH,OAAO3H,KAAI,SAACC,EAAMW,GAC5B,OACE,kBAACiH,GAAA,EAAIe,KAAL,CACEC,SAAQ,eAAUjI,GAClBT,IAAKS,EACLvD,UAAU,sBAEV,6BACG4C,EAAKqI,UACJ,yBAAKjL,UAAU,sBAAsBmK,KAAK,SAA1C,oBAGEvH,EAAKsI,UACP,yBAAKlL,UAAU,sBAAsBmK,KAAK,SAA1C,WAIA,yBAAKnK,UAAU,qBAAqBmK,KAAK,SAAzC,aAMF,6BACE,kBAAC7B,EAAD,CAAa5F,aAAcE,EAAK2H,UAChC,yBAAKvK,UAAU,+FACb,kBAAC4L,GAAA,EAAD,KACE,kBAACA,GAAA,EAASC,OAAV,CACEtH,QAAQ,UACRlE,GAAG,kBAEH,kBAAC,KAAD,OAGF,kBAACuL,GAAA,EAASrD,KAAV,KACI3F,EAAKqI,UAyBL,kBAACW,GAAA,EAASb,KAAV,CACEtJ,QAASiG,EAAoB+D,KAAK,EAAM7I,EAAKoD,MAD/C,mBAxBApD,EAAKsI,UACH,oCACE,kBAACU,GAAA,EAASb,KAAV,CACEtJ,QAAS4F,EAAYoE,KAAK,EAAM7I,EAAKoD,MADvC,UAKA,kBAAC4F,GAAA,EAASb,KAAV,CACEtJ,QAASgG,EAAcgE,KACrB,EACA7I,EAAKoD,MAHT,aAUF,kBAAC4F,GAAA,EAASb,KAAV,CACEtJ,QAAS+F,EAAYiE,KAAK,EAAM7I,EAAKoD,MADvC,YAgBR,yBAAKhG,UAAU,UACb,yBAAKA,UAAU,6CACb,uCACA,wCAEF,yBAAKA,UAAU,4DACb,6BACG4C,EAAK2H,QAAQpC,QACZ,SAACC,EAAKsD,GAAN,OAAatD,EAAMsD,EAAGvJ,WACtB,IAGJ,iCAEGS,EAAK2H,QACHpC,QAAO,SAACC,EAAKsD,GAAN,OAAatD,EAAMsD,EAAGtJ,aAAY,GACzCC,QAAQ,iBAoBvC,OAJKoB,KAAKR,MAAMqH,OAAOvH,SACrBwH,EAAU,wBAAIvK,UAAU,eAAd,wBAGL,yBAAKA,UAAU,UAAUuK,O,GApJhB/F,aChBPsH,GAAW,SAAUnF,EAASD,GACzCjD,KAAKL,SAAS,CAAEuD,UAASD,gBC2LZqF,G,2MAzKb9I,MAAQ,CACNwD,iBAAiB,EACjBlF,SAAS,EACTb,MAAO,GACPI,SAAU,GACVE,gBAAiB,GACjB0F,WAAY,GACZC,SAAS,EACTC,SAAS,G,EAGXoF,mBAAqB,SAAM1J,GAAN,mBAAA4D,EAAAC,OAAA,mDACnB7D,EAAE2J,iBAEFH,GAASI,KAAT,gBAAoB,EAAO,IAEvB,EAAKjJ,MAAMnC,WAAa,EAAKmC,MAAMjC,gBALpB,uBAMjB8K,GAASI,KAAT,gBAAoB,EAAM,uCANT,iCAUfC,EAAO,CACTzL,MAAO,EAAKuC,MAAMvC,MAClBI,SAAU,EAAKmC,MAAMnC,UAZJ,oBAAAoF,EAAA,MAgBEtB,EAAMiC,KAAK,oBAAqBsF,EAAM9F,IAhBxC,cAgBbC,EAhBa,OAiBbd,EAAU,EAAK4G,yBAAyB9F,GAC5C7B,QAAQC,IAAI,EAAK3E,OAlBA,kBAmBVyF,GAnBU,kCAsBb,KAAE6G,QAAQC,SAAS,QACrBR,GAASI,KAAT,gBAAoB,EAAM,wCAvBX,0D,EA4BrBE,yBAA2B,SAAA9F,GAAW,IAAD,EACXA,EAAOC,KAAvBtB,EAD2B,EAC3BA,MAAOkH,EADoB,EACpBA,KAEf7G,aAAaiH,QAAQ,WAAYtH,GACjC,IAAMO,EAAUC,IAAWR,GAY3B,OAXAc,EAAWd,GAEX,EAAK7B,SAAS,CACZqD,iBAAiB,EACjB/F,MAAO,GACPI,SAAU,GACVE,gBAAiB,GACjBO,QAAS4K,EAAKK,QAEhBV,GAASI,KAAT,gBAAoB,EAAO,IAEpB1G,G,EAGTiH,kBAAoB,SAAMnK,GAAN,mBAAA4D,EAAAC,OAAA,uDAClB7D,EAAE2J,iBAEEE,EAAO,CACTzL,MAAO,EAAKuC,MAAMvC,MAClBI,SAAU,EAAKmC,MAAMnC,UALL,oBAAAoF,EAAA,MASGtB,EAAMiC,KAAK,mBAAoBsF,EAAM9F,IATxC,cASZC,EATY,OAUhB7B,QAAQC,IAAI4B,GACRd,EAAU,EAAK4G,yBAAyB9F,GAX5B,kBAYTd,GAZS,kCAcZ,KAAE6G,QAAQC,SAAS,QACrBR,GAASI,KAAT,gBAAoB,EAAM,gCAfZ,0D,EA8BpBQ,WAAa,WACXrH,IACAT,EAAMuC,OAAO,gBAAiBd,GAC3BsG,MAAK,SAAArG,GACJhB,aAAaQ,WAAW,YACxB,EAAK1C,SAAS,CAAEqD,iBAAiB,OAElCmG,OAAM,SAAAC,GAAK,OAAIpI,QAAQC,IAAImI,EAAMC,SAASvG,KAAK8F,a,EAGpDzL,aAAe,SAAA0B,GACb,EAAKc,SAAL,eAAiBd,EAAEe,OAAO7C,KAAO8B,EAAEe,OAAO5C,S,+JApB9B4E,I,0CAIOY,K,OAAbkG,E,OACJ1I,KAAKL,SAAS,CAAEqD,iBAAiB,EAAMlF,QAAS4K,EAAKK,Q,gFAkB/C,IAAD,OAEHO,EACF,yBAAK/M,UAAU,qBAAqBmK,KAAK,SACtC1G,KAAKR,MAAMyD,YAIhB,GAAIjD,KAAKR,MAAM2D,QAEb,OADAnD,KAAKL,SAAS,CAAEwD,SAAS,IAClB,kBAAC,IAAD,CAAUzF,GAAG,MAGtB,IAAI6L,EACF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,KAAK,UACLC,OAAQ,kBACN,kBAAC,EAAD,CACExM,MAAO,EAAKuC,MAAMvC,MAClBI,SAAU,EAAKmC,MAAMnC,SACrBE,gBAAiB,EAAKiC,MAAMjC,gBAC5Bd,aAAc,EAAK8L,mBACnBpL,aAAc,EAAKA,kBAIzB,kBAAC,IAAD,CACEqM,KAAK,IACLE,OAAK,EACLD,OAAQ,kBACN,kBAAC,EAAD,CACExM,MAAO,EAAKuC,MAAMvC,MAClBI,SAAU,EAAKmC,MAAMnC,SACrBZ,aAAc,EAAKuM,kBACnB7L,aAAc,EAAKA,mBAkB7B,OAXI6C,KAAKR,MAAMwD,kBACbuG,EACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,UAAUG,UAAWC,KACjC,kBAAC,IAAD,CAAOJ,KAAK,aAAaG,UAAWE,KACpC,kBAAC,IAAD,CAAOL,KAAK,IAAIE,OAAK,EAACC,UAAW7E,KACjC,kBAAC,IAAD,CAAUgF,KAAK,UAAUpM,GAAG,QAMhC,yBAAKnB,UAAU,OACb,kBAAC,EAAD,CACEqB,OAAQoC,KAAKR,MAAMwD,gBACnBlF,QAASkC,KAAKR,MAAM1B,QACpBG,OAAQ8E,EAAWiF,KAAKhI,QAEzBA,KAAKR,MAAM0D,SAAWoG,EACtBC,O,GApKSxI,a,OCVlBgJ,IAASN,OACP,kBAAC,IAAD,KACE,kBAAC,GAAD,OAEFO,SAASC,eAAe,U","file":"static/js/main.7c5abc87.chunk.js","sourcesContent":["import React from 'react'\nimport './LoginForm.css'\n\nimport PropTypes from 'prop-types'\n\nconst loginForm = (props) => {\n\n    return (\n      <form className=\"LoginForm\" onSubmit={props.handleSubmit}>\n        <h2>Login</h2>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleInputEmail1\">Email address</label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"exampleInputEmail1\"\n            aria-describedby=\"emailHelp\"\n            placeholder=\"Enter email\"\n            name=\"email\"\n            value={props.email}\n            onChange={props.handleChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleInputPassword1\">Password</label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            id=\"exampleInputPassword1\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={props.password}\n            onChange={props.handleChange}\n            required\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-success\">\n          Submit\n        </button>\n      </form>\n    )\n  \n}\n\nloginForm.propTypes = {\n  handleSubmit: PropTypes.func,\n  email: PropTypes.string,\n  handleChange: PropTypes.func,\n  password: PropTypes.string,\n}\n\nexport default loginForm\n","import React from 'react'\nimport './SignupForm.css'\n\nconst signupForm = props => {\n  return (\n    <form\n      className=\"SignupForm\"\n      onSubmit={props.handleSubmit}\n    >\n      <h2>Signup</h2>\n      <div className=\"form-group\">\n        <label htmlFor=\"exampleInputEmail1\">Email address</label>\n        <input\n          type=\"email\"\n          className=\"form-control\"\n          id=\"exampleInputEmail1\"\n          aria-describedby=\"emailHelp\"\n          placeholder=\"Enter email\"\n          name=\"email\"\n          value={props.email}\n          onChange={props.handleChange}\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"exampleInputPassword1\">Password</label>\n        <input\n          type=\"password\"\n          className=\"form-control\"\n          id=\"exampleInputPassword1\"\n          placeholder=\"Password\"\n          name=\"password\"\n          value={props.password}\n          onChange={props.handleChange}\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"exampleInputPassword1\">Confirm Password</label>\n        <input\n          type=\"password\"\n          className=\"form-control\"\n          id=\"exampleInputPassword1\"\n          placeholder=\"Password\"\n          name=\"passwordConfirm\"\n          value={props.passwordConfirm}\n          onChange={props.handleChange}\n          required\n        />\n      </div>\n      <button type=\"submit\" className=\"btn btn-success\">\n        Submit\n      </button>\n    </form>\n  )\n}\n\nexport default signupForm\n","import React from 'react'\nimport './Navbar.css'\nimport { Link } from 'react-router-dom'\nimport { GoSignOut } from 'react-icons/go'\n\nconst navbar = props => {\n  let authenticateTabs = (\n    <>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/\">\n          Login\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/signup\">\n          Signup\n        </Link>\n      </li>\n    </>\n  )\n\n  let authenticatedOperations = null\n  if (props.isAuth) {\n    authenticatedOperations = (\n      <>\n        {/* <li className=\"nav-item active\">\n          <a className=\"nav-link\" href=\"/#\">\n            Home <span className=\"sr-only\">(current)</span>\n          </a>\n        </li> */}\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href=\"/\">\n            Order\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href=\"/orders\">\n            History\n          </a>\n        </li>\n        {props.isAdmin && (\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/dashboard\">\n              Dashboard\n            </a>\n          </li>\n        )}\n      </>\n    )\n  }\n\n  let LogoutTab = (\n    <li className=\"nav-item\">\n      <Link className=\"nav-link\" to=\"#\" onClick={props.logout}>\n        <GoSignOut />\n      </Link>\n    </li>\n  )\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <a className=\"navbar-brand\" href=\"/#\">\n        Joey's Pizza\n      </a>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav NavBar d-flex\">\n          {authenticatedOperations}\n          {props.isAuth ? LogoutTab : authenticateTabs}\n        </ul>\n      </div>\n    </nav>\n  )\n}\n\nexport default navbar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { IoMdClose } from 'react-icons/io'\n\nconst cartItem = props => (\n  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n    {props.name}\n    <span\n      className=\"badge badge-primary badge-pill\"\n      onClick={() => props.handleSelectMenuItem(props.name, props.price, true)}\n    >\n      {props.quantity}\n    </span>\n    <div>$ {props.totalPrice.toFixed(2)}</div>\n    <IoMdClose onClick={e => props.renderCartModal(e, props.name)} />\n  </li>\n)\n\ncartItem.propTypes = {\n  name: PropTypes.string,\n  quantity: PropTypes.number,\n  totalPrice: PropTypes.number\n}\n\nexport default cartItem\n","import React from 'react'\n\nimport CartItem from './CartItem/CartItem'\n\nconst miniCart = props => {\n  let cartItems = props.currentOrder.map(item => (\n    <CartItem\n      key={item.name}\n      name={item.name}\n      price={item.price}\n      quantity={item.quantity}\n      totalPrice={item.totalPrice}\n      renderCartModal={props.renderCartModal}\n      handleSelectMenuItem={props.handleSelectMenuItem}\n    />\n  ))\n\n  return (\n    <div className=\"MiniCart\">\n      \n\n      <ul className=\"list-group\">\n        {cartItems.length ? (\n          cartItems\n        ) : (\n            <div className=\"text-center\">\n              <h6 className=\"border-top pt-2\">- Cart Empty -</h6>\n\n            </div>\n          \n          \n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default miniCart\n","import React, { Component } from 'react'\nimport { Modal, Button } from 'react-bootstrap'\nimport PropTypes from 'prop-types'\n\nclass MenuModal extends Component {\n  state = {\n    quantity: this.props.currentItemEditMode\n      ? +this.props.currentItemEditMode.quantity\n      : 1\n  }\n\n  setQuantity = e => {\n    this.setState({ quantity: +e.target.value })\n  }\n\n  render() {\n    let options = []\n\n\n    for (let i = 1; i <= 10; i++) {\n      options.push(\n        <option value={+i} key={i}>\n          {i}\n        </option>\n      )\n    }\n\n    let totalPrice = this.props.itemPrice * this.state.quantity\n\n    return (\n      <Modal\n        show={this.props.show}\n        onHide={() => {\n          this.props.handleClose()\n          this.setState({ quantity: 1 })\n        }}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Add to Cart</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"row\">\n            <div className=\"col-12\">\n              Do you want to add the following to your order:\n            </div>\n            <div className=\"col-8 d-flex text-center align-items-center justify-content-between\">\n              <div>{this.props.itemName}</div>\n              <div>$ {this.props.itemPrice.toFixed(2)}</div>\n            </div>\n            <div className=\"col-4\">\n              <div className=\"input-group\">\n                <select\n                  className=\"custom-select\"\n                  id=\"inputGroupSelect04\"\n                  onChange={this.setQuantity}\n                  defaultValue={\n                    this.props.currentItemEditMode\n                      ? +this.props.currentItemEditMode.quantity\n                      : 1\n                  }\n                >\n                  \n\n                  {options}\n                </select>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <div className=\"d-flex justify-content-between row w-100 align-items-center\">\n            <div>Total: $ {totalPrice.toFixed(2)}</div>\n            <div>\n              <Button\n                variant=\"secondary\"\n                onClick={() => {\n                  this.props.handleClose()\n                  this.setState({ quantity: 1 })\n                }}\n              >\n                Close\n              </Button>\n\n              {this.state.quantity > 0 && (\n                <Button\n                  variant=\"success\"\n                  onClick={() => {\n                    this.props.handleSubmit(\n                      this.state.quantity,\n                      totalPrice,\n                      this.props.currentItemEditMode\n                    )\n\n                    this.setState({ quantity: 1 })\n                  }}\n                >\n                  {this.props.currentItemEditMode\n                    ? 'Update Cart'\n                    : 'Add to Cart'}\n                </Button>\n              )}\n            </div>\n          </div>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n}\n\nMenuModal.propTypes = {\n  itemPrice: PropTypes.number,\n  show: PropTypes.bool,\n  handleClose: PropTypes.func,\n  itemName: PropTypes.string\n}\n\nexport default MenuModal\n","import axios from 'axios'\n\nconsole.log(process.env.NODE_ENV)\nexport const Axios = axios.create({\n  baseURL:\n    process.env.NODE_ENV === 'production'\n      ? 'http://localhost:3001'\n      : 'https://ryan-orderapp.herokuapp.com'\n})\n","import { Axios } from './Axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    Axios.defaults.headers.common['Authorization'] = token\n  } else {\n    delete Axios.defaults.headers.common[\"Authorization\"]\n  }\n}\n\nexport default setAuthToken;","import { Axios } from './Axios'\nimport jwt_decode from 'jwt-decode'\nimport setAuthJWT from './setAuthJWT'\n\nexport const apiAuth = () => {\n  const token = localStorage.getItem('jwtToken')\n\n  if (!token) {\n    return false\n  }\n  const decoded = jwt_decode(token)\n\n  const currentTime = Date.now() / 1000\n\n  if (decoded.exp < currentTime) {\n    localStorage.removeItem('jwtToken')\n\n    setAuthJWT(null)\n\n    return false\n  } else {\n    setAuthJWT(token)\n\n    const user = {\n      id: decoded._id\n    }\n\n    return user\n  }\n}\n\nexport const getLoggedInUser = async () => {\n  apiAuth()\n  try {\n    let result = await Axios.get('/api/users/me', axiosConfig)\n    return result.data;\n\n  } catch (e) {\n    console.log('error', e)\n  }\n\n}\n\nexport const logoutUser = async function() {\n  apiAuth()\n\n  try {\n    localStorage.removeItem('jwtToken')\n    this.setState(\n      {\n        isAuthenticated: false,\n        isAdmin: false,\n        errMessage: '',\n        showErr: false,\n        toLogin: true\n      },\n      async () => {\n        await Axios.post('/api/users/logout', axiosConfig)\n      }\n    )\n  } catch (e) {\n    console.log('error ', e)\n  }\n}\n\nexport const submitOrder = async order => {\n  apiAuth()\n\n  try {\n    let result = await Axios.post('/api/orders', order, axiosConfig)\n    console.log(result)\n  } catch (e) {\n    console.log('error', e)\n  }\n}\n\nexport const getUserOrders = async () => {\n  apiAuth()\n\n  try {\n    let result = await Axios.get('/api/orders', axiosConfig)\n\n    // console.log(result)\n\n    return result\n  } catch (e) {\n    console.log('error', e)\n  }\n}\n\nexport const getAllOrders = async () => {\n  apiAuth()\n\n  try {\n    let result = await Axios.get('/api/orders/all', axiosConfig)\n\n    // console.log(result)\n\n    return result\n  } catch (e) {\n    console.log('error', e)\n  }\n}\n\nexport const removeUserCurrentOrder = async () => {\n  apiAuth()\n\n  try {\n    let result = await Axios.delete('/api/users/removeCurrentOrder')\n    console.log(result)\n  } catch (e) {\n    console.log('error', e)\n  }\n}\n\nexport const getMenu = async () => {\n  apiAuth()\n\n  try {\n    let result = await Axios.get(\n      process.env.REACT_APP_MENU_URL + 'menu.json',\n      axiosConfig\n    )\n\n    console.log(result)\n\n    return result.data\n  } catch (e) {\n    console.log('error', e)\n  }\n}\n\nexport const cancelOrder = async function(id) {\n  apiAuth()\n\n  try {\n    await Axios.put(`/api/orders/cancel/${id}`)\n\n    this.setOrders()\n  } catch (e) {\n    console.log('error', e)\n  }\n}\n\nexport const resumeOrder = async function (id) {\n  apiAuth()\n\n  try {\n    await Axios.put(`/api/orders/resume/${id}`)\n\n    this.setOrders()\n  } catch (e) {\n    console.log('error', e)\n  }\n}\n\nexport const completeOrder = async function (id) {\n  apiAuth()\n\n  try {\n    await Axios.put(`/api/orders/complete/${id}`)\n\n    this.setOrders()\n  } catch (e) {\n    console.log('error', e)\n  }\n}\nexport const markOrderIncomplete = async function (id) {\n  apiAuth()\n\n  try {\n    await Axios.put(`/api/orders/incomplete/${id}`)\n\n    this.setOrders()\n  } catch (e) {\n    console.log('error', e)\n  }\n}\nexport const axiosConfig = {\n  headers: {\n    'Content-Type': 'application/json;charset=UTF-8',\n    'Access-Control-Allow-Origin': '*'\n  }\n}\n","import React from 'react'\nimport { Modal, Button } from 'react-bootstrap'\n\nconst deleteCartItemModal = (props) => {\n  return (\n    <Modal show={props.show} onHide={props.handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{props.title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div>\n          Are you sure you want to remove {props.cartItemName}?\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={props.handleClose}>Close</Button>\n\n        <Button variant=\"danger\" onClick={(e) => props.deleteCartItem(e, props.cartItemName)}>Remove from order</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default deleteCartItemModal\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst summaryCartItem = props => (\n  <li className=\"list-group-item d-flex justify-content-between align-items-center border-0\">\n    {props.name}\n    <span\n      className=\"\"\n      // onClick={() => props.handleSelectMenuItem(props.name, props.price, true)}\n    >\n      {props.quantity}\n    </span>\n    <div>$ {props.totalPrice.toFixed(2)}</div>\n\n  </li>\n)\n\nsummaryCartItem.propTypes = {\n  name: PropTypes.string,\n  quantity: PropTypes.number,\n  totalPrice: PropTypes.number\n}\n\nexport default summaryCartItem\n","import React from 'react'\nimport SummaryCartItem from './SummaryCartItem/SummaryCartItem'\n\nconst summaryCart = props => {\n  let cartItems = props.currentOrder.map(item => (\n    <SummaryCartItem\n      key={item.name}\n      name={item.name}\n      price={item.price}\n      quantity={item.quantity}\n      totalPrice={item.totalPrice}\n      renderCartModal={props.renderCartModal}\n      handleSelectMenuItem={props.handleSelectMenuItem}\n    />\n  ))\n\n  return (\n    <div className=\"MiniCart\">\n      <ul className=\"list-group border-0\">\n        {cartItems}\n      </ul>\n    </div>\n  )\n}\n\nexport default summaryCart\n","import React, { Component } from 'react'\nimport { Modal, Button } from 'react-bootstrap'\nimport SummaryCart from '../../../Menu/MiniCart/SummaryCart/SummaryCart'\n\nclass CheckoutModal extends Component {\n  render() {\n\n    let [quantity, totalPrice] = this.props.currentOrder.reduce((acc, val) => {\n      acc[0] += val.quantity\n      acc[1] += val.totalPrice\n      return acc;\n    }, [0, 0])\n\n    return (\n      <div>\n        <Modal show={this.props.show} onHide={this.props.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Place Order Confirmation</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            Are you ready to place your order?\n            <SummaryCart\n              currentOrder={this.props.currentOrder}\n              renderCartModal={this.props.renderCartModal}\n              handleSelectMenuItem={this.props.handleSelectMenuItem}\n            />\n            <div className=\"list-group-item d-flex justify-content-end text-center pr-5 border-0\">\n              <div className=\"d-flex flex-column justify-content-center\">\n                <div>Count:</div>\n                <div>Total:</div>\n              </div>\n              <div className=\"d-flex flex-column justify-content-center ml-2 text-left\">\n                <div>{quantity}</div>\n                <div>${totalPrice.toFixed(2)}</div>\n              </div>\n            </div>\n          </Modal.Body>\n          <Modal.Footer className=\"\">\n            <Button variant=\"secondary\" onClick={this.props.handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={this.props.handleSubmit}>\n              Place Order\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default CheckoutModal\n","import React, { Component } from 'react'\nimport './Menu.css'\n\nimport MiniCart from './MiniCart/MiniCart'\nimport Modal from '../UI/Modal/Modal'\nimport { Button, Spinner } from 'react-bootstrap'\n\nimport { Axios } from '../../api/Axios'\n\nimport {\n  apiAuth,\n  axiosConfig,\n  submitOrder,\n  removeUserCurrentOrder,\n  getMenu\n} from '../../api/api'\nimport DeleteCartItemModal from '../UI/Modal/DeleteCartItemModal/DeleteCartItemModal'\nimport CheckoutModal from '../UI/Modal/CheckoutModal/CheckoutModal'\n\nclass Menu extends Component {\n  state = {\n    currentOrder: [],\n    show: false,\n    menu: null,\n    currentMenuItem: null,\n    currentDeleteItem: null,\n    showDeleteModal: false,\n    currentItemEditMode: null,\n    showCheckoutModal: false\n  }\n\n  handleShow = () => {\n    this.setState({ show: true })\n  }\n\n  handleClose = () => {\n    this.setState({ show: false, currentItemEditMode: null })\n  }\n\n  handleDeleteModalClose = () => {\n    this.setState({ showDeleteModal: false, currentDeleteItem: null })\n  }\n\n  handleCheckoutModalClose = () => {\n    this.setState({ showCheckoutModal: false })\n  }\n\n  handleCheckoutSubmit = async () => {\n    this.setState({ showCheckoutModal: false })\n\n    try {\n      let result = await submitOrder(this.state.currentOrder)\n      await removeUserCurrentOrder()\n    } catch (e) {\n      console.log(e)\n    }\n\n    this.props.history.push('/orders')\n  }\n\n  handleSelectMenuItem = (name, price, isEditing) => {\n    if (isEditing) {\n      let idx = this.state.currentOrder.findIndex(item => item.name === name)\n      let currentOrderItem = [...this.state.currentOrder][idx]\n\n      console.log(currentOrderItem)\n\n      this.setState(\n        {\n          currentMenuItem: {\n            name,\n            price\n          },\n          currentItemEditMode: currentOrderItem\n        },\n        () => {\n          this.handleShow()\n        }\n      )\n    } else {\n      this.setState(\n        {\n          currentMenuItem: {\n            name,\n            price\n          },\n          currentItemEditMode: null\n        },\n        () => {\n          this.handleShow()\n        }\n      )\n    }\n  }\n\n  handleSubmit = (quantity, totalPrice, editObj) => {\n    this.handleClose()\n\n    let data = {\n      ...this.state.currentMenuItem,\n      quantity,\n      totalPrice\n    }\n\n    let existingItemIdx = this.state.currentOrder.findIndex(item => {\n      return item.name === data.name\n    })\n\n    if (existingItemIdx > -1) {\n      this.setState(\n        prevState => {\n          let newCurrentOrder = [...this.state.currentOrder]\n          let currentItemObj = { ...this.state.currentOrder[existingItemIdx] }\n\n          if (editObj) {\n            currentItemObj.quantity = +data.quantity\n            currentItemObj.totalPrice = +data.totalPrice\n          } else {\n            currentItemObj.quantity += +data.quantity\n            currentItemObj.totalPrice += +data.totalPrice\n          }\n\n          newCurrentOrder[existingItemIdx] = currentItemObj\n\n          return {\n            currentOrder: newCurrentOrder,\n            currentMenuItem: null\n          }\n        },\n        () => {\n          this.saveOrderInProgress()\n          this.setState({ currentItemEditMode: null })\n        }\n      )\n    } else {\n      this.setState(\n        prevState => ({\n          currentOrder: [...prevState.currentOrder, data]\n        }),\n        () => {\n          this.saveOrderInProgress()\n        }\n      )\n    }\n  }\n\n  saveOrderInProgress = async () => {\n    let data = apiAuth()\n\n    if (!data.id) return\n\n    try {\n      let result = await Axios.post(\n        '/api/users/saveOrder',\n        this.state.currentOrder,\n        axiosConfig\n      )\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  componentDidMount = async () => {\n    let data = apiAuth()\n\n    if (!data.id) return\n\n    try {\n      let result = await Axios.get('/api/users/getOrder', axiosConfig)\n      let menu = await getMenu()\n\n      this.setState({ currentOrder: result.data, menu })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  deleteCartItem = async (e, name) => {\n    let data = apiAuth()\n    if (!data.id) return\n\n    try {\n      let result = await Axios.delete(\n        `/api/users/orderItem/${name}`,\n        axiosConfig\n      )\n\n      this.setState({\n        currentOrder: result.data.currentOrder,\n        showDeleteModal: false,\n        currentDeleteItem: null\n      })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  renderCartModal = async (e, name) => {\n    this.setState({ currentDeleteItem: name }, () => {\n      this.setState({ showDeleteModal: true })\n    })\n  }\n\n  orderCheckout = () => {\n    this.setState({ showCheckoutModal: true })\n  }\n\n  render() {\n    let orderItems = ['Pies', 'Pasta', 'Drinks']\n    let menuDisplay = []\n\n    if (this.state.menu) {\n      menuDisplay = orderItems.map((item, idx) => {\n        // console.log(this.state.menu[item])\n        return (\n          <React.Fragment key={idx}>\n            <h4>{item}</h4>\n            <hr />\n            {this.state.menu[item].map(item => {\n              return (\n                <li\n                  className=\"list-group-item border-0 MenuItem\"\n                  key={item.name}\n                  onClick={() => this.handleSelectMenuItem(item.name, item.price)}\n                >\n                  {item.name}\n                  <span>$ {item.price.toFixed(2)}</span>\n                </li>\n              )\n            })}\n          </React.Fragment>\n        )\n      })\n\n    }\n\n    return (\n      <div className=\"Menu\">\n        {/* <Route path=\"/orders\" component={Orders} /> */}\n        {this.state.currentMenuItem && !this.state.currentItemEditMode ? (\n          <Modal\n            handleClose={this.handleClose}\n            handleSubmit={this.handleSubmit}\n            show={this.state.show}\n            itemName={this.state.currentMenuItem.name}\n            itemPrice={this.state.currentMenuItem.price}\n          />\n        ) : null}\n\n        {this.state.currentMenuItem && this.state.currentItemEditMode ? (\n          <Modal\n            handleClose={this.handleClose}\n            handleSubmit={this.handleSubmit}\n            show={this.state.show}\n            itemName={this.state.currentMenuItem.name}\n            itemPrice={this.state.currentMenuItem.price}\n            currentItemEditMode={this.state.currentItemEditMode}\n          />\n        ) : null}\n\n        {this.state.showCheckoutModal && (\n          <CheckoutModal\n            show={this.state.showCheckoutModal}\n            handleClose={this.handleCheckoutModalClose}\n            handleSubmit={this.handleCheckoutSubmit}\n            currentOrder={this.state.currentOrder}\n            renderCartModal={this.renderCartModal}\n            handleSelectMenuItem={this.handleSelectMenuItem}\n          />\n        )}\n\n        {this.state.showDeleteModal ? (\n          <DeleteCartItemModal\n            show={this.state.showDeleteModal}\n            title=\"Delete Cart Item\"\n            cartItemName={this.state.currentDeleteItem}\n            deleteCartItem={this.deleteCartItem}\n            handleClose={this.handleDeleteModalClose}\n          />\n        ) : null}\n\n        <div className=\"row\">\n          {this.state.menu ? (\n            <div className=\"col-8\">{menuDisplay}</div>\n          ) : (\n            <div className=\"col-8 spinner\">\n              <Spinner animation=\"grow\" role=\"status\" variant=\"danger\">\n                <span className=\"sr-only\">Loading...</span>\n              </Spinner>\n            </div>\n          )}\n\n          <div className=\"col-4 border-left d-flex flex-column justify-content-between\">\n            <div>\n              <h4>Your Cart</h4>\n              <MiniCart\n                currentOrder={this.state.currentOrder}\n                renderCartModal={this.renderCartModal}\n                handleSelectMenuItem={this.handleSelectMenuItem}\n              />\n            </div>\n            {this.state.currentOrder.length ? (\n              <Button variant=\"outline-primary\" onClick={this.orderCheckout}>\n                Place Order\n              </Button>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Menu\n","import React, { Component } from 'react'\n\nimport { getUserOrders, cancelOrder, resumeOrder } from '../../api/api'\nimport SummaryCart from '../Menu/MiniCart/SummaryCart/SummaryCart'\nimport { Tab, Row, Col, Button, ListGroup } from 'react-bootstrap'\nimport './Orders.css'\n\nclass Order extends Component {\n  state = {\n    orders: []\n  }\n\n  componentDidMount() {\n    this.setOrders()\n  }\n\n  async setOrders() {\n    try {\n      let result = await getUserOrders()\n      this.setState({ orders: result.data })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  render() {\n    let content = (\n      <Tab.Container id=\"list-group-tabs-example\" defaultActiveKey=\"#link1\">\n        <Row>\n          <Col sm={4}>\n            <ListGroup>\n              {this.state.orders.map((item, i) => (\n                <ListGroup.Item key={i} action href={`#link${i}`}>\n                  <span>{item.completed\n                    ? 'done'\n                    : item.submitted\n                    ? 'In work'\n                    : 'cancelled'}</span>\n                  <div>{new Date(item.createdAt).toDateString()}</div>\n                  <div>{new Date(item.createdAt).toLocaleTimeString()}</div>\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </Col>\n          <Col sm={8}>\n            <Tab.Content>\n              {this.state.orders.map((item, i) => {\n                return (\n                  <Tab.Pane\n                    eventKey={`#link${i}`}\n                    key={i}\n                    className=\"border rounded p-2\"\n                  >\n                    <div>\n                      {item.completed ? (\n                        <div className=\"alert alert-success\" role=\"alert\">\n                          Done\n                        </div>\n                      ) : item.submitted ? (\n                        <div className=\"alert alert-warning\" role=\"alert\">\n                          In Work\n                        </div>\n                      ) : (\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                          Cancelled\n                        </div>\n                      )}\n                      <div>\n                        <SummaryCart currentOrder={item.content} />\n                        <div className=\"list-group-item d-flex justify-content-between align-items-center text-center pr-5 border-0\">\n                          {item.submitted ? (\n                            <Button\n                              variant=\"danger\"\n                              onClick={cancelOrder.bind(this, item._id)}\n                            >\n                              Cancel Order\n                            </Button>\n                          ) : <div></div>}\n\n                          <div className=\"d-flex\">\n                            <div className=\"d-flex flex-column justify-content-center\">\n                              <div>Count:</div>\n                              <div>Total:</div>\n                            </div>\n                            <div className=\"d-flex flex-column justify-content-center ml-2 text-left\">\n                              <div>\n                                {item.content.reduce(\n                                  (acc, el) => acc + el.quantity,\n                                  0\n                                )}\n                              </div>\n                              <div>\n                                $\n                                {item.content\n                                  .reduce((acc, el) => acc + el.totalPrice, 0)\n                                  .toFixed(2)}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </Tab.Pane>\n                )\n              })}\n            </Tab.Content>\n          </Col>\n        </Row>\n      </Tab.Container>\n    )\n\n    if (!this.state.orders.length) {\n      content = <h4 className=\"text-center\">-- No orders yet --</h4>\n    }\n\n    return <div className=\"Orders\">{content}</div>\n  }\n}\n\nexport default Order\n","import React, { Component } from 'react'\n\nimport {\n  getAllOrders,\n  cancelOrder,\n  resumeOrder,\n  completeOrder,\n  markOrderIncomplete\n} from '../../api/api'\n\nimport SummaryCart from '../Menu/MiniCart/SummaryCart/SummaryCart'\n\nimport { Tab, Row, Col, Button, ListGroup, Dropdown } from 'react-bootstrap'\n\nimport { GiHamburgerMenu } from 'react-icons/gi'\n\nclass Order extends Component {\n  state = {\n    orders: []\n  }\n\n  componentDidMount() {\n    this.setOrders()\n  }\n\n  async setOrders() {\n    try {\n      let result = await getAllOrders()\n      this.setState({ orders: result.data })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  render() {\n    let content = (\n      <Tab.Container id=\"list-group-tabs-example\" defaultActiveKey=\"#link1\">\n        <Row>\n          <Col sm={4}>\n            <ListGroup>\n              {this.state.orders.map((item, i) => (\n                <ListGroup.Item key={i} action href={`#link${i}`}>\n                  <div>{item.userId.email}</div>\n\n                  <span>\n                    {item.completed\n                      ? 'Pickup'\n                      : item.submitted\n                      ? 'In work'\n                      : 'cancelled'}\n                  </span>\n                  <div>{new Date(item.createdAt).toDateString()}</div>\n                  <div>{new Date(item.createdAt).toLocaleTimeString()}</div>\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </Col>\n          <Col sm={8}>\n            <Tab.Content>\n              {this.state.orders.map((item, i) => {\n                return (\n                  <Tab.Pane\n                    eventKey={`#link${i}`}\n                    key={i}\n                    className=\"border rounded p-2\"\n                  >\n                    <div>\n                      {item.completed ? (\n                        <div className=\"alert alert-success\" role=\"alert\">\n                          Ready for Pickup\n                        </div>\n                      ) : item.submitted ? (\n                        <div className=\"alert alert-warning\" role=\"alert\">\n                          In Work\n                        </div>\n                      ) : (\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                          Cancelled\n                        </div>\n                      )}\n\n\n                      <div>\n                        <SummaryCart currentOrder={item.content} />\n                        <div className=\"list-group-item d-flex justify-content-between align-items-center text-center pr-5 border-0\">\n                          <Dropdown>\n                            <Dropdown.Toggle\n                              variant=\"default\"\n                              id=\"dropdown-basic\"\n                            >\n                              <GiHamburgerMenu />\n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu>\n                              {!item.completed ? (\n                                item.submitted ? (\n                                  <>\n                                    <Dropdown.Item\n                                      onClick={cancelOrder.bind(this, item._id)}\n                                    >\n                                      Cancel\n                                    </Dropdown.Item>\n                                    <Dropdown.Item\n                                      onClick={completeOrder.bind(\n                                        this,\n                                        item._id\n                                      )}\n                                    >\n                                      Complete\n                                    </Dropdown.Item>\n                                  </>\n                                ) : (\n                                  <Dropdown.Item\n                                    onClick={resumeOrder.bind(this, item._id)}\n                                  >\n                                    Resume\n                                  </Dropdown.Item>\n                                )\n                              ) : (\n                                <Dropdown.Item\n                                  onClick={markOrderIncomplete.bind(this, item._id)}\n                                >\n                                  Mark Incomplete\n                                </Dropdown.Item>\n                              )}\n                            </Dropdown.Menu>\n                          </Dropdown>\n\n                          <div className=\"d-flex\">\n                            <div className=\"d-flex flex-column justify-content-center\">\n                              <div>Count:</div>\n                              <div>Total:</div>\n                            </div>\n                            <div className=\"d-flex flex-column justify-content-center ml-2 text-left\">\n                              <div>\n                                {item.content.reduce(\n                                  (acc, el) => acc + el.quantity,\n                                  0\n                                )}\n                              </div>\n                              <div>\n                                $\n                                {item.content\n                                  .reduce((acc, el) => acc + el.totalPrice, 0)\n                                  .toFixed(2)}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </Tab.Pane>\n                )\n              })}\n            </Tab.Content>\n          </Col>\n        </Row>\n      </Tab.Container>\n    )\n\n    if (!this.state.orders.length) {\n      content = <h4 className=\"text-center\">-- No orders yet --</h4>\n    }\n\n    return <div className=\"Orders\">{content}</div>\n  }\n}\n\nexport default Order\n","export const setFlash = function (showErr, errMessage) {\n  this.setState({ showErr, errMessage })\n}","import React, { Component } from 'react'\nimport './App.css'\nimport { Route, Switch, Redirect } from 'react-router-dom'\n\nimport LoginForm from './Components/LoginForm/LoginForm'\nimport SignupForm from './Components/SignupForm/SignupForm'\nimport Navbar from './Components/Navigation/Navbar/Navbar'\nimport Menu from './Components/Menu/Menu'\nimport Orders from './Components/Orders/Orders'\nimport Dashboard from './Components/Dashboard/Dashboard'\n\nimport { Axios } from './api/Axios'\nimport jwt_decode from 'jwt-decode'\nimport setAuthJWT from './api/setAuthJWT'\n\nimport { apiAuth, axiosConfig, logoutUser, getLoggedInUser } from './api/api'\nimport { setFlash } from './helperMethods'\n\nclass App extends Component {\n  state = {\n    isAuthenticated: false,\n    isAdmin: false,\n    email: '',\n    password: '',\n    passwordConfirm: '',\n    errMessage: '',\n    showErr: false,\n    toLogin: false\n  }\n\n  handleSignupSubmit = async e => {\n    e.preventDefault()\n\n    setFlash.call(this, false, '')\n\n    if (this.state.password !== this.state.passwordConfirm) {\n      setFlash.call(this, true, \"password confirmation doesn't match\")\n      return\n    }\n\n    let user = {\n      email: this.state.email,\n      password: this.state.password\n    }\n\n    try {\n      let result = await Axios.post('/api/users/signup', user, axiosConfig)\n      let decoded = this.setAuthTokenLocalStorage(result)\n      console.log(this.props)\n      return decoded\n      // return decoded\n    } catch (e) {\n      if (e.message.includes('450')) {\n        setFlash.call(this, true, 'Email is used on an existing account')\n      }\n    }\n  }\n\n  setAuthTokenLocalStorage = result => {\n    const { token, user } = result.data\n\n    localStorage.setItem('jwtToken', token)\n    const decoded = jwt_decode(token)\n    setAuthJWT(token)\n\n    this.setState({\n      isAuthenticated: true,\n      email: '',\n      password: '',\n      passwordConfirm: '',\n      isAdmin: user.admin\n    })\n    setFlash.call(this, false, '')\n\n    return decoded\n  }\n\n  handleLoginSubmit = async e => {\n    e.preventDefault()\n\n    let user = {\n      email: this.state.email,\n      password: this.state.password\n    }\n\n    try {\n      let result = await Axios.post('/api/users/login', user, axiosConfig)\n      console.log(result)\n      let decoded = this.setAuthTokenLocalStorage(result)\n      return decoded\n    } catch (e) {\n      if (e.message.includes('400')) {\n        setFlash.call(this, true, 'Invalid username or password')\n      }\n    }\n  }\n\n  async componentDidMount() {\n    let idObj = apiAuth()\n\n    \n    if (idObj) {\n      let user = await getLoggedInUser()\n      this.setState({ isAuthenticated: true, isAdmin: user.admin })\n    }\n  }\n\n  deleteUser = () => {\n    apiAuth()\n    Axios.delete('/api/users/me', axiosConfig)\n      .then(result => {\n        localStorage.removeItem('jwtToken')\n        this.setState({ isAuthenticated: false })\n      })\n      .catch(error => console.log(error.response.data.message))\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  render() {\n    // todo - fix width of alert button\n    let errorFlash = (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        {this.state.errMessage}\n      </div>\n    )\n\n    if (this.state.toLogin) {\n      this.setState({ toLogin: false })\n      return <Redirect to=\"/\" />\n    }\n\n    let router = (\n      <Switch>\n        <Route\n          path=\"/signup\"\n          render={() => (\n            <SignupForm\n              email={this.state.email}\n              password={this.state.password}\n              passwordConfirm={this.state.passwordConfirm}\n              handleSubmit={this.handleSignupSubmit}\n              handleChange={this.handleChange}\n            />\n          )}\n        />\n        <Route\n          path=\"/\"\n          exact\n          render={() => (\n            <LoginForm\n              email={this.state.email}\n              password={this.state.password}\n              handleSubmit={this.handleLoginSubmit}\n              handleChange={this.handleChange}\n            />\n          )}\n        />\n      </Switch>\n    )\n\n    if (this.state.isAuthenticated) {\n      router = (\n        <Switch>\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/\" exact component={Menu} />\n          <Redirect from=\"/signup\" to=\"/\" />\n        </Switch>\n      )\n    }\n\n    return (\n      <div className=\"App\">\n        <Navbar\n          isAuth={this.state.isAuthenticated}\n          isAdmin={this.state.isAdmin}\n          logout={logoutUser.bind(this)}\n        />\n        {this.state.showErr && errorFlash}\n        {router}\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}